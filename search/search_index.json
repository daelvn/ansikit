{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ansikit - ANSI code toolkit for Lua \u00b6 A library for usual ANSI codes, with some extended capabilities like a color palette library or styling functions. It is written in MoonScript but plays nice with Lua. Installation \u00b6 $ luarocks install ansikit License \u00b6 I'm throwing this, as always, to the public domain, do what you want with it. Maintainer \u00b6 Dael daelvn@gmail.com Goodbye? \u00b6 goodbye.","title":"Home"},{"location":"#ansikit-ansi-code-toolkit-for-lua","text":"A library for usual ANSI codes, with some extended capabilities like a color palette library or styling functions. It is written in MoonScript but plays nice with Lua.","title":"ansikit - ANSI code toolkit for Lua"},{"location":"#installation","text":"$ luarocks install ansikit","title":"Installation"},{"location":"#license","text":"I'm throwing this, as always, to the public domain, do what you want with it.","title":"License"},{"location":"#maintainer","text":"Dael daelvn@gmail.com","title":"Maintainer"},{"location":"#goodbye","text":"goodbye.","title":"Goodbye?"},{"location":"changelog/","text":"Changelog \u00b6 v1.0 \u00b6 Initial commit.","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v10","text":"Initial commit.","title":"v1.0"},{"location":"module/color/","text":"ansikit.color \u00b6 Use colors with ANSI sequences. Refer to this Wikipedia page for a list of colors or how to use ANSI sequences in general. Bit4 \u00b6 Signature \u2192 (number) -> string Generates a single-number color escape sequence. Equivalent to using (Sequence 27, \"m\") n . Bit8 \u00b6 Signature \u2192 (number, boolean) -> string Chooses a color 0-255 from a predefined palette. The boolean determines whether it is a foreground or background color ( false for foreground, true for background, defaults to false ). Bit24 \u00b6 Signature \u2192 (number, number, number, boolean) -> string Takes r , g and b parameters and a boolean that determines whether it is a foreground or background color (works as in Bit8 ).","title":"ansikit.color"},{"location":"module/color/#ansikitcolor","text":"Use colors with ANSI sequences. Refer to this Wikipedia page for a list of colors or how to use ANSI sequences in general.","title":"ansikit.color"},{"location":"module/color/#bit4","text":"Signature \u2192 (number) -> string Generates a single-number color escape sequence. Equivalent to using (Sequence 27, \"m\") n .","title":"Bit4"},{"location":"module/color/#bit8","text":"Signature \u2192 (number, boolean) -> string Chooses a color 0-255 from a predefined palette. The boolean determines whether it is a foreground or background color ( false for foreground, true for background, defaults to false ).","title":"Bit8"},{"location":"module/color/#bit24","text":"Signature \u2192 (number, number, number, boolean) -> string Takes r , g and b parameters and a boolean that determines whether it is a foreground or background color (works as in Bit8 ).","title":"Bit24"},{"location":"module/cursor/","text":"ansikit.cursor \u00b6 Cursor-manipulating functions and escape sequences. cursorUp \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor up n characters. n defaults to 1. cursorDown \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor down n characters. n defaults to 1. cursorForward \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor forward n characters. n defaults to 1. cursorBack \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor back n characters. n defaults to 1. cursorNextLn \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor to the next n lines. n defaults to 1. cursorPreviousLn \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor to the previous n lines. n defaults to 1. cursorSetColumn \u00b6 Signature \u2192 ( [ number ] ) -> nil Moves the cursor to column n . n defaults to 1. cursorSetPosition \u00b6 Signature \u2192 (number, number) -> nil Sets the cursor position to x and y . cursorSetPosition1 \u00b6 Signature \u2192 (number) -> (number) -> nil Curried version of cursorPosition . cursorSave \u00b6 Signature \u2192 nil Saves the current cursor position. cursorRestore \u00b6 Signature \u2192 nil Restores the previously saved cursor position.","title":"ansikit.cursor"},{"location":"module/cursor/#ansikitcursor","text":"Cursor-manipulating functions and escape sequences.","title":"ansikit.cursor"},{"location":"module/cursor/#cursorup","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor up n characters. n defaults to 1.","title":"cursorUp"},{"location":"module/cursor/#cursordown","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor down n characters. n defaults to 1.","title":"cursorDown"},{"location":"module/cursor/#cursorforward","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor forward n characters. n defaults to 1.","title":"cursorForward"},{"location":"module/cursor/#cursorback","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor back n characters. n defaults to 1.","title":"cursorBack"},{"location":"module/cursor/#cursornextln","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor to the next n lines. n defaults to 1.","title":"cursorNextLn"},{"location":"module/cursor/#cursorpreviousln","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor to the previous n lines. n defaults to 1.","title":"cursorPreviousLn"},{"location":"module/cursor/#cursorsetcolumn","text":"Signature \u2192 ( [ number ] ) -> nil Moves the cursor to column n . n defaults to 1.","title":"cursorSetColumn"},{"location":"module/cursor/#cursorsetposition","text":"Signature \u2192 (number, number) -> nil Sets the cursor position to x and y .","title":"cursorSetPosition"},{"location":"module/cursor/#cursorsetposition1","text":"Signature \u2192 (number) -> (number) -> nil Curried version of cursorPosition .","title":"cursorSetPosition1"},{"location":"module/cursor/#cursorsave","text":"Signature \u2192 nil Saves the current cursor position.","title":"cursorSave"},{"location":"module/cursor/#cursorrestore","text":"Signature \u2192 nil Restores the previously saved cursor position.","title":"cursorRestore"},{"location":"module/page/","text":"ansikit.page \u00b6 Page-manipulating functions and escape sequences. eraseFromCursor \u00b6 Signature \u2192 nil Alias \u2192 clearFromCursor Clears everything from the cursor position. eraseToCursor \u00b6 Signature \u2192 nil Alias \u2192 clearToCursor Clears everything until the cursor position. eraseScreen \u00b6 Signature \u2192 nil Alias \u2192 clearScreen Clears everything currently displayed. eraseFullScreen \u00b6 Signature \u2192 nil Alias \u2192 clearFullScreen Clears everything currently displayed and in the scrollback buffer. scrollUp \u00b6 Signature \u2192 ( [ number ] ) -> nil Scrolls up page by n lines. n defaults to 1. scrollDown \u00b6 Signature \u2192 ( [ number ] ) -> nil Scrolls down page by n lines. n defaults to 1.","title":"ansikit.page"},{"location":"module/page/#ansikitpage","text":"Page-manipulating functions and escape sequences.","title":"ansikit.page"},{"location":"module/page/#erasefromcursor","text":"Signature \u2192 nil Alias \u2192 clearFromCursor Clears everything from the cursor position.","title":"eraseFromCursor"},{"location":"module/page/#erasetocursor","text":"Signature \u2192 nil Alias \u2192 clearToCursor Clears everything until the cursor position.","title":"eraseToCursor"},{"location":"module/page/#erasescreen","text":"Signature \u2192 nil Alias \u2192 clearScreen Clears everything currently displayed.","title":"eraseScreen"},{"location":"module/page/#erasefullscreen","text":"Signature \u2192 nil Alias \u2192 clearFullScreen Clears everything currently displayed and in the scrollback buffer.","title":"eraseFullScreen"},{"location":"module/page/#scrollup","text":"Signature \u2192 ( [ number ] ) -> nil Scrolls up page by n lines. n defaults to 1.","title":"scrollUp"},{"location":"module/page/#scrolldown","text":"Signature \u2192 ( [ number ] ) -> nil Scrolls down page by n lines. n defaults to 1.","title":"scrollDown"},{"location":"module/paint/","text":"ansikit.paint \u00b6 NFP Paint format support from CraftOS. colors \u00b6 A Palette that mimics the CraftOS colors API . loadNFP \u00b6 Signature \u2192 (string) -> table Gets an NFP-formatted string and creates a table out of the representation. The table contains rows, and each row contains a color per column. No characters are involved. loadImage \u00b6 Equivalent to loadNFP , but it takes a filename and loads the image from a file. drawImage \u00b6 Signature \u2192 (table) -> nil Prints an image that was loaded with loadImage or loadNFP .","title":"ansikit.paint"},{"location":"module/paint/#ansikitpaint","text":"NFP Paint format support from CraftOS.","title":"ansikit.paint"},{"location":"module/paint/#colors","text":"A Palette that mimics the CraftOS colors API .","title":"colors"},{"location":"module/paint/#loadnfp","text":"Signature \u2192 (string) -> table Gets an NFP-formatted string and creates a table out of the representation. The table contains rows, and each row contains a color per column. No characters are involved.","title":"loadNFP"},{"location":"module/paint/#loadimage","text":"Equivalent to loadNFP , but it takes a filename and loads the image from a file.","title":"loadImage"},{"location":"module/paint/#drawimage","text":"Signature \u2192 (table) -> nil Prints an image that was loaded with loadImage or loadNFP .","title":"drawImage"},{"location":"module/palette/","text":"ansikit.palettte \u00b6 Palettes and color representations for ansikit. color4 \u00b6 A table that contains a collection of Bit4 colors. - black - red - green - yellow - blue - magenta - cyan - white It can be prefixed with modifiers such as bg or bright , so you can address color4.white , color4.bg.white , color4.bright.white and color4.bright.bg.white . color8 \u00b6 Table that generates Bit8 colors based on an index. Accepts a single bg modifier. They are accessed with an underscore on front, such as color8._255 or color8.bg._48 . Color \u00b6 Signature \u2192 ( number , number , number , [ boolean ] ) -> Color A function that creates a representation of an RGB color, with an optional background flag (if set to false, will be used as foreground, and otherwise as background. Defaults to false). The colors are passed in order r , g , b . Lua white = Color ( 255 , 255 , 255 ) MoonScript white = Color 255 , 255 , 255 background \u00b6 Takes a Color and sets it to a background color. foreground \u00b6 Takes a Color and sets it to a foreground color. hexToRGB \u00b6 Signature \u2192 (number|string) -> number, number, number Taxes a hex number or 6-digit long hex string and turns it into three RGB components. Palette \u00b6 Signature \u2192 ( string , [ table ] ) -> Palette Creates a named palette that can contain colors. It takes an optional table that contains a list of Color s. You can access its name indexing __name and the color list using __colors , but you should use the functions for that. You can index colors already added by using a normal index, such as pal.white . nameFor \u00b6 Signature \u2192 (Palette) -> string|nil Returns the name for a Palette . addColor \u00b6 Signature \u2192 (Palette) -> (string, Color) -> nil Takes a Palette , then a name and a Color and adds it to the palette. removeColor \u00b6 Signature \u2192 (Palette) -> (string) -> nil Removes a color from a Palette by name.","title":"ansikit.palette"},{"location":"module/palette/#ansikitpalettte","text":"Palettes and color representations for ansikit.","title":"ansikit.palettte"},{"location":"module/palette/#color4","text":"A table that contains a collection of Bit4 colors. - black - red - green - yellow - blue - magenta - cyan - white It can be prefixed with modifiers such as bg or bright , so you can address color4.white , color4.bg.white , color4.bright.white and color4.bright.bg.white .","title":"color4"},{"location":"module/palette/#color8","text":"Table that generates Bit8 colors based on an index. Accepts a single bg modifier. They are accessed with an underscore on front, such as color8._255 or color8.bg._48 .","title":"color8"},{"location":"module/palette/#color","text":"Signature \u2192 ( number , number , number , [ boolean ] ) -> Color A function that creates a representation of an RGB color, with an optional background flag (if set to false, will be used as foreground, and otherwise as background. Defaults to false). The colors are passed in order r , g , b . Lua white = Color ( 255 , 255 , 255 ) MoonScript white = Color 255 , 255 , 255","title":"Color"},{"location":"module/palette/#background","text":"Takes a Color and sets it to a background color.","title":"background"},{"location":"module/palette/#foreground","text":"Takes a Color and sets it to a foreground color.","title":"foreground"},{"location":"module/palette/#hextorgb","text":"Signature \u2192 (number|string) -> number, number, number Taxes a hex number or 6-digit long hex string and turns it into three RGB components.","title":"hexToRGB"},{"location":"module/palette/#palette","text":"Signature \u2192 ( string , [ table ] ) -> Palette Creates a named palette that can contain colors. It takes an optional table that contains a list of Color s. You can access its name indexing __name and the color list using __colors , but you should use the functions for that. You can index colors already added by using a normal index, such as pal.white .","title":"Palette"},{"location":"module/palette/#namefor","text":"Signature \u2192 (Palette) -> string|nil Returns the name for a Palette .","title":"nameFor"},{"location":"module/palette/#addcolor","text":"Signature \u2192 (Palette) -> (string, Color) -> nil Takes a Palette , then a name and a Color and adds it to the palette.","title":"addColor"},{"location":"module/palette/#removecolor","text":"Signature \u2192 (Palette) -> (string) -> nil Removes a color from a Palette by name.","title":"removeColor"},{"location":"module/sequence/","text":"ansikit.sequence \u00b6 Form ANSI sequences easily. Sequence \u00b6 Signature \u2192 (string|number) -> ([string|number]) -> (...) -> string Creates and ANSI sequence with start character sb and final character tb . tb is usually ST, but is not always needed. MoonScript color = ( Sequence 27 ) \" m \" color 38 , 2 , 255 , 255 , 255 -- ^[38;2;255;255;255m Lua color = Sequence ( 27 )( \"m\" ) color ( 38 , 2 , 255 , 255 , 255 ) -- ^[38;2;255;255;255m","title":"ansikit.sequence"},{"location":"module/sequence/#ansikitsequence","text":"Form ANSI sequences easily.","title":"ansikit.sequence"},{"location":"module/sequence/#sequence","text":"Signature \u2192 (string|number) -> ([string|number]) -> (...) -> string Creates and ANSI sequence with start character sb and final character tb . tb is usually ST, but is not always needed. MoonScript color = ( Sequence 27 ) \" m \" color 38 , 2 , 255 , 255 , 255 -- ^[38;2;255;255;255m Lua color = Sequence ( 27 )( \"m\" ) color ( 38 , 2 , 255 , 255 , 255 ) -- ^[38;2;255;255;255m","title":"Sequence"},{"location":"module/style/","text":"ansikit.style \u00b6 ansicolors.lua and chalk drop-in replacement that uses ansikit as a backend. It is worth noting that it also supports all extra ansikit styles and modifiers, such as fraktur . colorize \u00b6 ansicolors.lua clone, works roughly the same way. Taken from the ansicolors documentation, and adapted for ansikit: Lua print ( colorize ( '%{red}hello' )) print ( colorize ( '%{redbg}hello%{reset}' )) print ( colorize ( '%{bold red underline}hello' )) MoonScript print colorize \" %{red}hello \" print colorize \" %{redbg}hello%{reset} \" print colorize \" %{bold red underline}hello \" The colorize function makes sure that color attributes are reset at each end of the generated string. If you want to generate complex strings piece-by-piece, use colorize.noReset , which works exactly the same, but without adding the reset codes at each end of the string. Differences \u00b6 ansicolors names the code for bold \"bright\". ansikit differences between bold and bright colors, so to use the bright version of a color you should use bright<color> , and to use bold, simply use the bold attribute. Some attributes are different between ansicolors and ansikit. ansicolor uses \"hidden\" whereas ansikit uses \"conceal\". ansicolor uses \"dim\" whereas ansikit uses \"faint\". Refer to the ansikit.text documentation to see valid attributes. ansicolors detects if it's running on Windows, and if it is, then does not print ANSI codes. This library was half-developed on Windows (eugh, I know), and it Works On My Machine\u2122, so that is not a thing on ansikit. stylize \u00b6 chalk clone, works roughly the same way. Refer to the chalk documentation to see how to use it, but it does include indexing and the stylize.style ( chalk.style ) function. Differences \u00b6 chalk uses the modifier \"reversed\", whereas ansikit uses \"reverse\" (as in ansikit.text ). This also reflects in the stylize function. To avoid duplicates, the order of some attribute names have been reversed to match with those on colorize , so instead of bgblue , it's bluebg and so on. style \u00b6 A mix of colorize and stylize . If called with a string, it will use the colorize function, and if indexed, will use stylize to build the styles, so you have the best of both worlds!","title":"ansikit.style"},{"location":"module/style/#ansikitstyle","text":"ansicolors.lua and chalk drop-in replacement that uses ansikit as a backend. It is worth noting that it also supports all extra ansikit styles and modifiers, such as fraktur .","title":"ansikit.style"},{"location":"module/style/#colorize","text":"ansicolors.lua clone, works roughly the same way. Taken from the ansicolors documentation, and adapted for ansikit: Lua print ( colorize ( '%{red}hello' )) print ( colorize ( '%{redbg}hello%{reset}' )) print ( colorize ( '%{bold red underline}hello' )) MoonScript print colorize \" %{red}hello \" print colorize \" %{redbg}hello%{reset} \" print colorize \" %{bold red underline}hello \" The colorize function makes sure that color attributes are reset at each end of the generated string. If you want to generate complex strings piece-by-piece, use colorize.noReset , which works exactly the same, but without adding the reset codes at each end of the string.","title":"colorize"},{"location":"module/style/#differences","text":"ansicolors names the code for bold \"bright\". ansikit differences between bold and bright colors, so to use the bright version of a color you should use bright<color> , and to use bold, simply use the bold attribute. Some attributes are different between ansicolors and ansikit. ansicolor uses \"hidden\" whereas ansikit uses \"conceal\". ansicolor uses \"dim\" whereas ansikit uses \"faint\". Refer to the ansikit.text documentation to see valid attributes. ansicolors detects if it's running on Windows, and if it is, then does not print ANSI codes. This library was half-developed on Windows (eugh, I know), and it Works On My Machine\u2122, so that is not a thing on ansikit.","title":"Differences"},{"location":"module/style/#stylize","text":"chalk clone, works roughly the same way. Refer to the chalk documentation to see how to use it, but it does include indexing and the stylize.style ( chalk.style ) function.","title":"stylize"},{"location":"module/style/#differences_1","text":"chalk uses the modifier \"reversed\", whereas ansikit uses \"reverse\" (as in ansikit.text ). This also reflects in the stylize function. To avoid duplicates, the order of some attribute names have been reversed to match with those on colorize , so instead of bgblue , it's bluebg and so on.","title":"Differences"},{"location":"module/style/#style","text":"A mix of colorize and stylize . If called with a string, it will use the colorize function, and if indexed, will use stylize to build the styles, so you have the best of both worlds!","title":"style"},{"location":"module/text/","text":"ansikit.text \u00b6 Text styling escape codes. reset \u00b6 Resets all text styling. bold \u00b6 Sets bold text. notBold \u00b6 Removes bold effect ( as well as faint effect ). faint \u00b6 Sets faint text. notFaint \u00b6 Removes faint effect ( as well as bold effect ). italic \u00b6 Sets italic text. notItalic \u00b6 Removes italic effect ( as well as Fraktur text ). underline \u00b6 Sets underlined text. doubleUnderline \u00b6 Sets doubly-underlined text. notUnderline \u00b6 Removes underline effect. blink \u00b6 Alias \u2192 slowBlink Sets slow blinking text. rapidBlink \u00b6 Sets rapid blinking text. notBlink \u00b6 Removes blinking effect. reverse \u00b6 Reverse video text. Swaps foreground and background colors. notReverse \u00b6 Removes reverse effect. conceal \u00b6 Conceals text. notConceal \u00b6 Alias \u2192 reveal Reveals text. crossed \u00b6 Alias \u2192 strikethrough Sets crossed-out text. notCrossed \u00b6 Alias \u2192 notStrikethrough Removes strikethrough effect. resetFont \u00b6 Sets the primary and default font. setFont \u00b6 Signature \u2192 ( [ number ] ) -> nil Sets an alternative font n . n defaults to 0. fraktur \u00b6 Sets Fraktur text. notFraktur \u00b6 Removes Fraktur effect ( as well as italic text ). framed \u00b6 Sets framed text. encircled \u00b6 Sets encircled text. notFramed \u00b6 Alias \u2192 notEncircled Removes framed and encircled effects. overline \u00b6 Sets overlined text. notOverline \u00b6 Removes overline effect.","title":"ansikit.text"},{"location":"module/text/#ansikittext","text":"Text styling escape codes.","title":"ansikit.text"},{"location":"module/text/#reset","text":"Resets all text styling.","title":"reset"},{"location":"module/text/#bold","text":"Sets bold text.","title":"bold"},{"location":"module/text/#notbold","text":"Removes bold effect ( as well as faint effect ).","title":"notBold"},{"location":"module/text/#faint","text":"Sets faint text.","title":"faint"},{"location":"module/text/#notfaint","text":"Removes faint effect ( as well as bold effect ).","title":"notFaint"},{"location":"module/text/#italic","text":"Sets italic text.","title":"italic"},{"location":"module/text/#notitalic","text":"Removes italic effect ( as well as Fraktur text ).","title":"notItalic"},{"location":"module/text/#underline","text":"Sets underlined text.","title":"underline"},{"location":"module/text/#doubleunderline","text":"Sets doubly-underlined text.","title":"doubleUnderline"},{"location":"module/text/#notunderline","text":"Removes underline effect.","title":"notUnderline"},{"location":"module/text/#blink","text":"Alias \u2192 slowBlink Sets slow blinking text.","title":"blink"},{"location":"module/text/#rapidblink","text":"Sets rapid blinking text.","title":"rapidBlink"},{"location":"module/text/#notblink","text":"Removes blinking effect.","title":"notBlink"},{"location":"module/text/#reverse","text":"Reverse video text. Swaps foreground and background colors.","title":"reverse"},{"location":"module/text/#notreverse","text":"Removes reverse effect.","title":"notReverse"},{"location":"module/text/#conceal","text":"Conceals text.","title":"conceal"},{"location":"module/text/#notconceal","text":"Alias \u2192 reveal Reveals text.","title":"notConceal"},{"location":"module/text/#crossed","text":"Alias \u2192 strikethrough Sets crossed-out text.","title":"crossed"},{"location":"module/text/#notcrossed","text":"Alias \u2192 notStrikethrough Removes strikethrough effect.","title":"notCrossed"},{"location":"module/text/#resetfont","text":"Sets the primary and default font.","title":"resetFont"},{"location":"module/text/#setfont","text":"Signature \u2192 ( [ number ] ) -> nil Sets an alternative font n . n defaults to 0.","title":"setFont"},{"location":"module/text/#fraktur","text":"Sets Fraktur text.","title":"fraktur"},{"location":"module/text/#notfraktur","text":"Removes Fraktur effect ( as well as italic text ).","title":"notFraktur"},{"location":"module/text/#framed","text":"Sets framed text.","title":"framed"},{"location":"module/text/#encircled","text":"Sets encircled text.","title":"encircled"},{"location":"module/text/#notframed","text":"Alias \u2192 notEncircled Removes framed and encircled effects.","title":"notFramed"},{"location":"module/text/#overline","text":"Sets overlined text.","title":"overline"},{"location":"module/text/#notoverline","text":"Removes overline effect.","title":"notOverline"}]}